{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bar Chart Race \u00b6 Make animated bar chart races in Python with matplotlib. Installation \u00b6 Install with either: pip install bar_chart_race conda install -c conda-forge bar_chart_race Usage \u00b6 Must begin with a pandas DataFrame containing 'wide' data where: Every row represents a single period of time Each column holds the value for a particular category The index contains the time component (optional) The data below is an example of properly formatted data. It shows total deaths from COVID-19 for the highest 20 countries by date. Main function - bar_chart_race \u00b6 There is one main function, bar_chart_race , which we use to recreate the above video. All parameters are shown with their default value except for filename and title . >>> import bar_chart_race as bcr >>> df = bcr . load_dataset ( 'covid19' ) >>> bcr . bar_chart_race ( df = df , filename = 'covid19_horiz_desc.mp4' , orientation = 'h' , sort = 'desc' , n_bars = None , label_bars = True , use_index = True , steps_per_period = 10 , period_length = 500 , figsize = ( 6.5 , 3.5 ), cmap = 'dark24' , title = 'COVID-19 Deaths by Country' , bar_label_size = 7 , tick_label_size = 7 , period_label_size = 16 , fig = None ) Save animation to disk or return HTML \u00b6 Leave the filename parameter as None to return the animation as HTML. You can subsequently embed the animation into a Jupyter Notebook with the following. In [ 1 ]: bcr_html = bcr . bar_chart_race ( df = df , filename = None ) In [ 2 ]: from IPython.display import HTML In [ 3 ]: HTML ( bcr_html ) Use vertical bars and limit to top n_bars \u00b6 Make bars vertical by setting orientation to 'v' . Use n_bars if you want to limit the number of bars. The bars will transition on and off the graph. >>> df = bcr . load_dataset ( 'urban_pop' ) >>> bcr . bar_chart_race ( df = df , filename = 'videos/urban_vert_asc.gif' , orientation = 'v' , sort = 'asc' , n_bars = 8 , title = 'Urban Population' )","title":"Home"},{"location":"#bar-chart-race","text":"Make animated bar chart races in Python with matplotlib.","title":"Bar Chart Race"},{"location":"#installation","text":"Install with either: pip install bar_chart_race conda install -c conda-forge bar_chart_race","title":"Installation"},{"location":"#usage","text":"Must begin with a pandas DataFrame containing 'wide' data where: Every row represents a single period of time Each column holds the value for a particular category The index contains the time component (optional) The data below is an example of properly formatted data. It shows total deaths from COVID-19 for the highest 20 countries by date.","title":"Usage"},{"location":"#main-function-bar_chart_race","text":"There is one main function, bar_chart_race , which we use to recreate the above video. All parameters are shown with their default value except for filename and title . >>> import bar_chart_race as bcr >>> df = bcr . load_dataset ( 'covid19' ) >>> bcr . bar_chart_race ( df = df , filename = 'covid19_horiz_desc.mp4' , orientation = 'h' , sort = 'desc' , n_bars = None , label_bars = True , use_index = True , steps_per_period = 10 , period_length = 500 , figsize = ( 6.5 , 3.5 ), cmap = 'dark24' , title = 'COVID-19 Deaths by Country' , bar_label_size = 7 , tick_label_size = 7 , period_label_size = 16 , fig = None )","title":"Main function - bar_chart_race"},{"location":"#save-animation-to-disk-or-return-html","text":"Leave the filename parameter as None to return the animation as HTML. You can subsequently embed the animation into a Jupyter Notebook with the following. In [ 1 ]: bcr_html = bcr . bar_chart_race ( df = df , filename = None ) In [ 2 ]: from IPython.display import HTML In [ 3 ]: HTML ( bcr_html )","title":"Save animation to disk or return HTML"},{"location":"#use-vertical-bars-and-limit-to-top-n_bars","text":"Make bars vertical by setting orientation to 'v' . Use n_bars if you want to limit the number of bars. The bars will transition on and off the graph. >>> df = bcr . load_dataset ( 'urban_pop' ) >>> bcr . bar_chart_race ( df = df , filename = 'videos/urban_vert_asc.gif' , orientation = 'v' , sort = 'asc' , n_bars = 8 , title = 'Urban Population' )","title":"Use vertical bars and limit to top n_bars"},{"location":"installation/","text":"Installation \u00b6 Install from pypi or conda-forge pip install bar_chart_race conda install -c conda-forge bar_chart_race Installing ffmpeg \u00b6 In order to save animations as mp4/m4v/mov/etc... files, you must install ffmpeg , which allows for conversion to many different formats of video and audio. After installation, ensure that ffmpeg has been added to your path by going to your command line and entering ffmepg -version . Install ImageMagick for animated gifs \u00b6 If you desire to create animated gifs, you'll need to install ImageMagick . Verify that it has been added to your path with magick -version . Dependencies \u00b6 Bar Chart Race requires that you have both matplotlib and pandas installed.","title":"Installation"},{"location":"installation/#installation","text":"Install from pypi or conda-forge pip install bar_chart_race conda install -c conda-forge bar_chart_race","title":"Installation"},{"location":"installation/#installing-ffmpeg","text":"In order to save animations as mp4/m4v/mov/etc... files, you must install ffmpeg , which allows for conversion to many different formats of video and audio. After installation, ensure that ffmpeg has been added to your path by going to your command line and entering ffmepg -version .","title":"Installing ffmpeg"},{"location":"installation/#install-imagemagick-for-animated-gifs","text":"If you desire to create animated gifs, you'll need to install ImageMagick . Verify that it has been added to your path with magick -version .","title":"Install ImageMagick for animated gifs"},{"location":"installation/#dependencies","text":"Bar Chart Race requires that you have both matplotlib and pandas installed.","title":"Dependencies"},{"location":"tutorial/","text":"Tutorial \u00b6 bar_chart_race offers a wide range of inputs to customize the animation. On this page, we'll cover many of the available options. Data format \u00b6 The data you choose to animate as a bar chart race must be provided in a specific format. The data must be within a pandas DataFrame containing 'wide' data where: Each row represents a single period of time Each column holds the value for a particular category The index contains the time component (optional) Example data \u00b6 The data below is an example of properly formatted data. It shows total deaths from COVID-19 for several countries by date. Each row represents a single day's worth of data. Each column represents a single country's deaths. The index contains the date. Any pandas DataFrame that conforms to this structure may be used to create a bar chart race. Basic bar chart races \u00b6 A single main function, bar_chart_race , exists to create the animations. Calling it with the defaults returns the animation as an HTML string. The load_dataset function is available to load sample DataFrames. If you are working within a Jupyter Notebook, you can import the HTML function from the IPython.display module to embed the video directly into the notebook. import bar_chart_race as bcr from IPython.display import HTML df = bcr . load_dataset ( 'covid19' ) html_string = bcr . bar_chart_race ( df ) HTML ( html_string ) More docs?","title":"Tutorial"},{"location":"tutorial/#tutorial","text":"bar_chart_race offers a wide range of inputs to customize the animation. On this page, we'll cover many of the available options.","title":"Tutorial"},{"location":"tutorial/#data-format","text":"The data you choose to animate as a bar chart race must be provided in a specific format. The data must be within a pandas DataFrame containing 'wide' data where: Each row represents a single period of time Each column holds the value for a particular category The index contains the time component (optional)","title":"Data format"},{"location":"tutorial/#example-data","text":"The data below is an example of properly formatted data. It shows total deaths from COVID-19 for several countries by date. Each row represents a single day's worth of data. Each column represents a single country's deaths. The index contains the date. Any pandas DataFrame that conforms to this structure may be used to create a bar chart race.","title":"Example data"},{"location":"tutorial/#basic-bar-chart-races","text":"A single main function, bar_chart_race , exists to create the animations. Calling it with the defaults returns the animation as an HTML string. The load_dataset function is available to load sample DataFrames. If you are working within a Jupyter Notebook, you can import the HTML function from the IPython.display module to embed the video directly into the notebook. import bar_chart_race as bcr from IPython.display import HTML df = bcr . load_dataset ( 'covid19' ) html_string = bcr . bar_chart_race ( df ) HTML ( html_string ) More docs?","title":"Basic bar chart races"}]}